name: 'action-docker-check-image'
description: 'Check if image already exist on SCW registry'
inputs:
  container_registry_server:
    description: “Docker private registry url”
    required: true
  container_registry_login:
    description: “Login for image registry”
    required: true
  container_registry_password:
    description: “Password for image registry (token for scw)”
    required: true
  BATCH:
    description: 'Set to true to check batch docker image'
    required: false
  image_name:
    description: 'Set custom image name'
    required: false
outputs:
  image_found:
    description: 'Set output if image is found in SCW docker registry'
    value: ${{ steps.check_existing_docker_image.outputs.image_found }}
runs:
  using: 'composite'
  steps:
    - name: Prepare
      id: prep
      run: |
        IMAGE_NAME=${{ inputs.container_registry_server }}/${{ inputs.image_name || env.IMAGE_NAME }}
        COMMIT_SHA=${{ github.event.inputs.commit_sha || github.sha }}
        SHORTREF=${COMMIT_SHA::8}
        TAGS_SHA="${IMAGE_NAME}:${SHORTREF}"
        if [[ -n "${{ inputs.BATCH }}" ]]; then
          delimiter=' '
          TAGS_SHA+=${delimiter}${IMAGE_NAME}-batch:${SHORTREF}
        fi
        echo "tags_sha=${TAGS_SHA}" >> $GITHUB_OUTPUT
      shell: bash

    - name: check output
      run: |
        echo "Image tags: ${{ steps.prep.outputs.tags_sha }}"
      shell: bash

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.container_registry_server }}
        username: ${{ inputs.container_registry_login }}
        password: ${{ inputs.container_registry_password }}

    - name: Check if image exist on SCW docker registry
      id: check_existing_docker_image
      run: |
        for tag in ${{ steps.prep.outputs.tags_sha }}; do
            if docker manifest inspect $tag > /dev/null; then
            echo "image_found=true" >> $GITHUB_OUTPUT
          else
            echo "image_found=false" >> $GITHUB_OUTPUT
            break
          fi
        done
      shell: bash
